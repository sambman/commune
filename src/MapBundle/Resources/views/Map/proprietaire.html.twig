{%  extends "::layout.html.twig"  %}

{% block titre %} Map {% endblock %}

{%  block bodyOnLoad %} onload="initialiser()" {% endblock %}

{% block navigation %}
<!-- Navigation -->
<nav class="navbar navbar-inverse navbar-fixed-top" role="navigation">
    <div class="container">
        <!-- Collect the nav links, forms, and other content for toggling -->
        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
            <ul class="nav navbar-nav">
                <li>
                    <a href="{{ path("map_proprietaire") }}"><span class="glyphicon glyphicon-globe"></span> Carte</a>
                </li>
								<li>
                    <a href="{{ path("logout") }}"><span class="glyphicon glyphicon-triangle-left"></span> Déconnexion</a>
                </li>
              </ul>
              <ul class="nav navbar-nav navbar-right">
                <li>
                  <a href="#">{{app.user.prenom}} {{app.user.nom}}, {{app.user.username}}</a>
                </li>
            </ul>
        </div>
        <!-- /.navbar-collapse -->
    </div>
    <!-- /.container -->
</nav>
{% endblock %}

{% block pageContent %}

<!-- Page Content -->
<div class="container">

    <!-- Page Heading -->
    <div class="row">
        <div class="col-lg-12">
            <h1 class="page-header">Exploiter votre carte
                <small>...</small>
            </h1>
        </div>
    </div>
    <!-- Modal -->
      <div id="add" class="modal fade" role="dialog">
        <div class="modal-dialog">

          <!-- Modal content-->
            <div class="modal-content">
              <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                  <h4 class="modal-title">Référencer un lieu</h4>
                  </div>
                  <div class="modal-body">
                  <p>
                  <div class="alert alert-info">
                        <form action="{{ path('map_proprietaire') }}" method="post">
                                <label for="lats">Latitude :</label>
                                <input class="form-control" type="text" id="lats" name="lat" /><br/>
                                <label for="lngs">Longitude :</label>
                                <input class="form-control" type="text" id="lngs" name="lng" /><br/>
                                <label for="inf">Informations :</label>
                                <textarea class="form-control" id="inf" name="infos"></textarea><br/>
                              <center>  <input class="btn btn-primary" type="submit" value="Enregistrer" /></center>
                        </form>
                      </div>
                  </p>
                  </div>
                  <div class="modal-footer">
                  <button type="button" class="btn btn-default" data-dismiss="modal">Fermer</button>
                  </div>
                  </div>

                  </div>
                  </div> <!-- fin modal -->
    <!-- /.row -->

    <center>
    <div class="row">
        <div class="col-lg-12">
        <a href="http://www.coordonnees-gps.fr" target="_blank"><button type="button" class="btn btn-warning"><span class="glyphicon glyphicon-map-marker"></span> Localisation GPS</button></a>&nbsp;&nbsp;&nbsp;&nbsp;
        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#add"><span class="glyphicon glyphicon-map-marker"></span> Référencement</button>&nbsp;&nbsp;&nbsp;&nbsp;
        </div>
    </div>
    </center>
    <br/>

    <!-- Project One -->
    <div class="row">
        <div class="col-md-12">
            <input id="pac-input" class="controls" type="text" placeholder="Rechercher...">
            <div id="map" style="width:100%; height:70%"></div>
        </div>
    </div>
    <!-- /.row -->

</div>
<!-- /.container -->
{% endblock %}

{% block autresScripts %}
<script type="text/javascript">

function initialiser() {
  var latlng = new google.maps.LatLng(14.4974000, -14.4523611);
  //objet contenant des propriétés avec des identificateurs prédéfinis dans Google Maps permettant de définir des options d'affichage de notre carte
  var options = {
          center: latlng,
          zoom: 8,
          mapTypeId: google.maps.MapTypeId.ROADMAP
          };
  var map = new google.maps.Map(document.getElementById("map"), options);

  // Create the search box and link it to the UI element.
  var input = document.getElementById('pac-input');
  var searchBox = new google.maps.places.SearchBox(input);
  map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

  // Bias the SearchBox results towards current map's viewport.
  map.addListener('bounds_changed', function() {
    searchBox.setBounds(map.getBounds());
  });

  var markers = [];
  // [START region_getplaces]
  // Listen for the event fired when the user selects a prediction and retrieve
  // more details for that place.
  searchBox.addListener('places_changed', function() {
    var places = searchBox.getPlaces();

    if (places.length == 0) {
      return;
    }

    // Clear out the old markers.
    markers.forEach(function(marker) {
      marker.setMap(null);
    });
    markers = [];

    // For each place, get the icon, name and location.
    var bounds = new google.maps.LatLngBounds();
    places.forEach(function(place) {
      var icon = {
        url: place.icon,
        size: new google.maps.Size(71, 71),
        origin: new google.maps.Point(0, 0),
        anchor: new google.maps.Point(17, 34),
        scaledSize: new google.maps.Size(25, 25)
      };

      // Create a marker for each place.
      markers.push(new google.maps.Marker({
        map: map,
        icon: icon,
        title: place.name,
        position: place.geometry.location
      }));

      if (place.geometry.viewport) {
        // Only geocodes have viewport.
        bounds.union(place.geometry.viewport);
      } else {
        bounds.extend(place.geometry.location);
      }
    });
    map.fitBounds(bounds);
  });
  // [END region_getplaces]

  {% for over in listeOverlay %}
      {%  if over.type == 'Parcelle'  %}
            var points = [];
                {% for latLng in over.path %}
                      points.push(new google.maps.LatLng({{latLng[0]}},{{latLng[1]}}));
                {% endfor %}
          var description = "<h5><u>Propriétaire de la parcelle</u>: "+'{{over.user.prenom}}'+" "+'{{over.user.nom}}'+"<br/>"+
                         "<u>Date et lieu de naissance</u>: "+"né le "+'{{over.user.dateNaiss|date('d/m/Y')}}'+" à "+'{{over.user.lieuNaiss}}'+"<br/>"+
                          '{{over.infos}}'+"</h5>";
            var parcelle = new google.maps.Polygon({
                  paths: points,
                  strokeColor: "#000000",//couleur des bords du polygone
                  strokeOpacity: 0.8,//opacité des bords du polygone
                  strokeWeight: 2,//épaisseur des bords du polygone
                  fillColor: "#FF0000",//couleur de remplissage du polygone
                  fillOpacity: 0.35////opacité de remplissage du polygone
            });
            parcelle.setMap(map);
            var infoWindow = new google.maps.InfoWindow();
            setEventOverlay(parcelle,infoWindow,description,parcelle.getPath().getAt(0));

      {% elseif over.type == 'Marqueur' %}
          var coords;
          {% for latLng in over.path %}
                coords = new google.maps.LatLng({{latLng[0]}},{{latLng[1]}});
          {% endfor %}
          var description = "<h5><u>Personne à l'origine du marquage</u>: "+'{{over.user.prenom}}'+" "+'{{over.user.nom}}'+"<br/>"+
                      '{{over.infos}}'+"</h5>";
          var marqueur = new google.maps.Marker({
            position: coords,
            title: '{{over.infos}}'
          });
          marqueur.setMap(map);
          var infowindow = new google.maps.InfoWindow();
          setEventOverlay(marqueur,infowindow,description,marqueur.getPosition());

      {% endif %}
  {% endfor %}

	} // fin fonction initialiser

  // fonction qui permet d'afficher une description textuelle pour chaque "overlay"
  function setEventOverlay( overlay, infowindow, texte,saPosition){
  google.maps.event.addListener( overlay, 'click', function() {
    // affectation du texte
    infowindow.setContent( texte);
    // affectation de la position d'affichage
    infowindow.setPosition(saPosition);
    // affichage InfoWindow
    infowindow.open( this.getMap(), this);
  });
} // fin fonction setEventOverlay

</script>

{% endblock %}
